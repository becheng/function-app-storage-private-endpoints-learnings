# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: function to private endpoint storage sample

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NODEJS_VERSION: '18.1.0' 
  # AZURE_RESOURCE_GROUP_NAME: 'git-actions-deploy-func-demo'
  AZURE_FUNCTIONAPP_NAME: 'bc-lpgxl4xnti3ym-fa' # TODO: parameterize
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '${{ github.workspace }}/src/js-azure-func'
  BUILD_OUTPUT_PATH: '${{ github.workspace }}/build-artifacts'
  
  # BUILD_PACKAGE_NAME: 'az-func.zip'

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:

  # 1. deploy the azure infra
  deploy-az-infra:
    runs-on: ubuntu-latest
    environment: sample

    steps:
      # Checkout code
    - uses: actions/checkout@v3

      # Log into Azure
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
      # Deploy Bicep file
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./deploy/main.bicep
        #parameters: 'storagePrefix=mystore storageSKU=Standard_LRS'
        failOnStdErr: false
  
  # 2. build the code
  build-az-function:
    needs: [deploy-az-infra]
    runs-on: ubuntu-latest
    environment: sample

    steps:    
      # Checkout code
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.0
      with:
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: ${{ env.NODEJS_VERSION }}

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd